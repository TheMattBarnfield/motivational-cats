{"version":3,"sources":["messages.ts","LoadingSpinner.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["messages","getRandomMessage","Math","floor","random","length","LoadingSpinner","className","App","useState","message","setMessage","loading","setLoading","Date","now","cache","setCache","src","encodeURIComponent","alt","onLoad","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAAMA,G,MAAqB,CACvB,aACA,gBACA,gBACA,iBACA,cACA,YACA,oBACA,UACA,QACA,mBAGSC,EAAmB,WAC5B,OAAOD,EAASE,KAAKC,MAAMD,KAAKE,SAASJ,EAASK,U,eCTvCC,EAFkB,kBAAO,sBAAKC,UAAU,WAAf,UAA0B,wBAAW,wBAAW,wBAAW,4BC4BpFC,EA1BO,WAAO,IAAD,EACMC,mBAASR,KADf,mBACjBS,EADiB,KACRC,EADQ,OAEMF,oBAAS,GAFf,mBAEjBG,EAFiB,KAERC,EAFQ,OAGEJ,mBAASK,KAAKC,OAHhB,mBAGjBC,EAHiB,KAGVC,EAHU,KAWxB,OACI,qBAAKV,UAAU,aAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBACIA,UAAU,QACVW,IAAG,sCAAiCC,mBAAmBT,GAApD,0BAA8EM,GACjFI,IAAKV,EACLW,OAAQ,kBAAMR,GAAW,MAE5BD,EAAU,cAAC,EAAD,IAAqB,wBAAQL,UAAU,iBAAiBe,QAf5D,WACfT,GAAW,GACXF,EAAWV,KACXgB,EAASH,KAAKC,QAY0B,2BCXjCQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e4585abc.chunk.js","sourcesContent":["const messages: string[] = [\n    \"Keep at it\",\n    \"You can do it\",\n    \"Hang in there\",\n    \"Knock 'em dead\",\n    \"You da boss\",\n    \"You rock!\",\n    \"It's not all shit\",\n    \"Go you!\",\n    \"#Slay\",\n    \"Yaaaaaas Queen\"\n]\n\nexport const getRandomMessage = (): string => {\n    return messages[Math.floor(Math.random()*messages.length)];\n}\n","import React from 'react';\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner: React.FC = () => (<div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>)\n\nexport default LoadingSpinner;\n","import React, {useState} from 'react';\nimport './App.css';\nimport {getRandomMessage} from \"./messages\";\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst App: React.FC = () => {\n    const [message, setMessage] = useState(getRandomMessage());\n    const [loading, setLoading] = useState(true);\n    const [cache, setCache] = useState(Date.now());\n\n    const loadNewCat = () => {\n        setLoading(true);\n        setMessage(getRandomMessage());\n        setCache(Date.now());\n    }\n\n    return (\n        <div className=\"background\">\n            <div className=\"image-container\">\n                <img\n                    className=\"image\"\n                    src={`https://cataas.com/cat/says/${encodeURIComponent(message)}?size=50&cache=${cache}`}\n                    alt={message}\n                    onLoad={() => setLoading(false)}\n                />\n                {loading ? <LoadingSpinner /> : <button className=\"new-cat-button\" onClick={loadNewCat}>New cat</button>}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}